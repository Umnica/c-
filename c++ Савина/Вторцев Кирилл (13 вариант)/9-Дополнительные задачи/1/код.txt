/*
В файле содержатся записи о поставках товаров. Для каждой поставки
указано наименование поставленного товара, фирма-производитель,
количество, стоимость. Необходимо отсортировать исходный список
по возрастанию стоимости товара.
Использовать метод на выбор:
1. метод пузырька
*/

#include <iostream>
#include <fstream>
#include <iomanip>
using namespace std;
// Открываем глобальные файловые потоки
ifstream in("in_data.txt");
ofstream out("out_data.txt");

// Описание структуры
struct product {
	char nameOfTheDeliveredProduct[60];// Наименование поставленного товара
	char firmManufacturer[60];// Фирма-производитель
	int quantity; // Количество
	int cost; // Cтоимость
	void print(); // Фунция для вывода информации в файл
	void show(); // Фунция для вывода информации на экран
	void sort(product* products, int productCount); // Сортировка по стоимости методом пузырька
};

// Функция для создания продуктов в файл
void createProducts() {
	int quantity = rand() % 100;
	int cost = rand() % 10000;
	out << setw(25) << "nameOfTheDeliveredProduct " << setw(10) << "firmManufacturer " << setw(10) << quantity << setw(20) << cost << endl;
}
// Функция для вывода на экран наименования переменных
void printName() {
	cout << endl;
	cout << setw(25) << "nameOfTheDeliveredProduct|" << setw(10) << "firmManufacturer   |" << setw(7) << "\t quantity     |" << setw(10) << "cost";
	cout << endl;
}

void product::show() {
	cout << setw(25) << nameOfTheDeliveredProduct << " " << setw(10) << firmManufacturer << " " << setw(10) << quantity << setw(20) << cost << endl;
}

void product::print() {
	out << setw(25) << nameOfTheDeliveredProduct << " " << setw(10) << firmManufacturer << " " << setw(10) << quantity << setw(20) << cost << endl;
}
void product::sort(product* products, int productCount) {
	product temp;
	int i, j;
	for (i = 0; i < productCount - 1; i++) 
		for (j = productCount - 1; j > i; j--)
			if (products[j].cost < products[j - 1].cost) {
				temp = products[j];
				products[j] = products[j - 1];
				products[j - 1] = temp;
			}
}

int main() {
	/*int n;
	cin >> n;
	out << n << endl;
	for (int i = 0; i < n; i++) {
		createProducts();
	}*/
	string word;
	int productCount;// Количество разных товаров
	// Получем строку с кол-вом игрушек
	in >> productCount;
	printName();
	// Описываем массив структур
	product* products = new product[productCount];
	for (int i = 0; i < productCount; i++) {
		in >> products[i].nameOfTheDeliveredProduct;
		in >> products[i].firmManufacturer;
		in >> products[i].quantity;
		in >> products[i].cost;
		products[i].show();
	}

	for (int i = 0; i < productCount; i++)
		products[i].sort(products, productCount);
	printName();
	for (int i = 0; i < productCount; i++) {
		products[i].show();
	}
	out << productCount << endl;
	for (int i = 0; i < productCount; i++) {
		products[i].print();
	}

	delete[]products;
	in.close();
	out.close();
	return 0;
}